%!PS-Adobe-2.0 EPSF-2.0
%%Title: case1_mean_rig.eps
%%Creator: gnuplot 5.4 patchlevel 1
%%CreationDate: Wed Feb  1 11:03:34 2023
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 302 226
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 302 50 lineto 302 226 lineto 50 226 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (case1_mean_rig.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.4 patchlevel 1)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Feb  1 11:03:34 2023)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 5040.00 3528.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
686 588 M
63 0 V
4038 0 R
-63 0 V
stroke
602 588 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.00)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
LCb setrgbcolor
686 988 M
63 0 V
4038 0 R
-63 0 V
stroke
602 988 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.10)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
686 1388 M
63 0 V
4038 0 R
-63 0 V
stroke
602 1388 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.20)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
686 1788 M
63 0 V
4038 0 R
-63 0 V
stroke
602 1788 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.30)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
686 2187 M
63 0 V
4038 0 R
-63 0 V
stroke
602 2187 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.40)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
686 2587 M
63 0 V
4038 0 R
-63 0 V
stroke
602 2587 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.50)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
686 2987 M
63 0 V
4038 0 R
-63 0 V
stroke
602 2987 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.60)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
686 3387 M
63 0 V
4038 0 R
-63 0 V
stroke
602 3387 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.70)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
686 588 M
0 63 V
0 2736 R
0 -63 V
stroke
686 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.0)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1711 588 M
0 63 V
0 2736 R
0 -63 V
stroke
1711 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.5)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2737 588 M
0 63 V
0 2736 R
0 -63 V
stroke
2737 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3762 588 M
0 63 V
0 2736 R
0 -63 V
stroke
3762 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.5)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4787 588 M
0 63 V
0 2736 R
0 -63 V
stroke
4787 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (2.0)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
686 3387 N
686 588 L
4101 0 V
0 2799 V
-4101 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
133 1987 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (UR)]
] -46.7 MCshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
LCb setrgbcolor
2736 238 M
[ [(Helvetica) 140.0 0.0 true true 0 (k)]
[(Helvetica) 112.0 -42.0 true true 0 (t)]
] -32.7 MCshow
/Helvetica findfont 140 scalefont setfont
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C
LCb setrgbcolor
4136 3254 M
[ [(Helvetica) 140.0 0.0 true true 0 (Estimate)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C
707 588 Pls
727 588 Pls
748 589 Pls
768 588 Pls
789 590 Pls
809 589 Pls
830 588 Pls
850 588 Pls
871 589 Pls
891 590 Pls
912 589 Pls
932 589 Pls
953 588 Pls
973 588 Pls
994 588 Pls
1014 588 Pls
1035 588 Pls
1055 589 Pls
1076 588 Pls
1096 590 Pls
1117 588 Pls
1137 589 Pls
1158 588 Pls
1178 589 Pls
1199 588 Pls
1219 588 Pls
1240 589 Pls
1260 588 Pls
1281 590 Pls
1301 588 Pls
1322 590 Pls
1342 588 Pls
1363 590 Pls
1383 589 Pls
1404 588 Pls
1424 589 Pls
1445 589 Pls
1465 588 Pls
1486 588 Pls
1506 590 Pls
1527 590 Pls
1547 588 Pls
1568 589 Pls
1588 589 Pls
1609 588 Pls
1629 588 Pls
1650 590 Pls
1670 590 Pls
1691 588 Pls
1711 588 Pls
1732 589 Pls
1752 588 Pls
1773 588 Pls
1793 589 Pls
1814 589 Pls
1834 588 Pls
1855 588 Pls
1875 590 Pls
1896 588 Pls
1916 588 Pls
1937 590 Pls
1957 589 Pls
1978 588 Pls
1998 588 Pls
2019 589 Pls
2039 590 Pls
2060 588 Pls
2080 588 Pls
2101 590 Pls
2121 588 Pls
2142 589 Pls
2162 589 Pls
2183 589 Pls
2203 589 Pls
2224 588 Pls
2244 588 Pls
2265 588 Pls
2285 588 Pls
2306 588 Pls
2326 590 Pls
2347 588 Pls
2367 590 Pls
2388 589 Pls
2408 588 Pls
2429 588 Pls
2449 589 Pls
2470 589 Pls
2490 589 Pls
2511 588 Pls
2531 588 Pls
2552 590 Pls
2572 588 Pls
2593 588 Pls
2613 590 Pls
2634 588 Pls
2654 589 Pls
2675 589 Pls
2695 588 Pls
2716 589 Pls
2737 588 Pls
2757 588 Pls
2778 589 Pls
2798 588 Pls
2819 588 Pls
2839 590 Pls
2860 588 Pls
2880 591 Pls
2901 589 Pls
2921 588 Pls
2942 589 Pls
2962 589 Pls
2983 588 Pls
3003 589 Pls
3024 588 Pls
3044 588 Pls
3065 590 Pls
3085 588 Pls
3106 588 Pls
3126 589 Pls
3147 588 Pls
3167 590 Pls
3188 589 Pls
3208 588 Pls
3229 589 Pls
3249 588 Pls
3270 588 Pls
3290 589 Pls
3311 588 Pls
3331 588 Pls
3352 589 Pls
3372 588 Pls
3393 590 Pls
3413 589 Pls
3434 588 Pls
3454 590 Pls
3475 589 Pls
3495 588 Pls
3516 590 Pls
3536 588 Pls
3557 588 Pls
3577 590 Pls
3598 589 Pls
3618 588 Pls
3639 589 Pls
3659 588 Pls
3680 589 Pls
3700 589 Pls
3721 589 Pls
3741 589 Pls
3762 588 Pls
3782 588 Pls
3803 588 Pls
3823 588 Pls
3844 588 Pls
3864 589 Pls
3885 588 Pls
3905 590 Pls
3926 588 Pls
3946 588 Pls
3967 590 Pls
3987 588 Pls
4008 588 Pls
4028 590 Pls
4049 590 Pls
4069 588 Pls
4090 589 Pls
4110 590 Pls
4131 588 Pls
4151 589 Pls
4172 588 Pls
4192 589 Pls
4213 589 Pls
4233 589 Pls
4254 589 Pls
4274 588 Pls
4295 589 Pls
4315 588 Pls
4336 588 Pls
4356 588 Pls
4377 588 Pls
4397 588 Pls
4418 590 Pls
4438 588 Pls
4459 588 Pls
4479 590 Pls
4500 588 Pls
4520 588 Pls
4541 590 Pls
4561 590 Pls
4582 588 Pls
4602 590 Pls
4623 589 Pls
4643 588 Pls
4664 589 Pls
4684 590 Pls
4705 588 Pls
4725 588 Pls
4746 589 Pls
4766 588 Pls
4787 588 Pls
4419 3254 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C
LCb setrgbcolor
4136 3114 M
[ [(Helvetica) 140.0 0.0 true true 0 (known value)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C
707 1255 Crs
727 1118 Crs
748 1257 Crs
768 1519 Crs
789 1460 Crs
809 1782 Crs
830 1646 Crs
850 1320 Crs
871 1234 Crs
891 1410 Crs
912 1357 Crs
932 1303 Crs
953 1094 Crs
973 1613 Crs
994 1412 Crs
1014 1327 Crs
1035 1726 Crs
1055 1263 Crs
1076 1498 Crs
1096 1172 Crs
1117 1402 Crs
1137 1389 Crs
1158 1469 Crs
1178 1636 Crs
1199 1061 Crs
1219 1065 Crs
1240 1468 Crs
1260 1582 Crs
1281 1451 Crs
1301 1292 Crs
1322 1449 Crs
1342 1619 Crs
1363 1362 Crs
1383 1282 Crs
1404 1510 Crs
1424 1140 Crs
1445 1800 Crs
1465 1320 Crs
1486 1366 Crs
1506 1411 Crs
1527 1693 Crs
1547 1278 Crs
1568 1253 Crs
1588 1854 Crs
1609 1414 Crs
1629 1312 Crs
1650 1523 Crs
1670 1187 Crs
1691 1361 Crs
1711 1225 Crs
1732 1465 Crs
1752 1172 Crs
1773 1301 Crs
1793 1393 Crs
1814 1288 Crs
1834 1522 Crs
1855 1244 Crs
1875 1681 Crs
1896 1001 Crs
1916 1208 Crs
1937 1445 Crs
1957 1123 Crs
1978 1108 Crs
1998 1556 Crs
2019 1211 Crs
2039 1872 Crs
2060 1479 Crs
2080 1791 Crs
2101 1230 Crs
2121 1599 Crs
2142 1130 Crs
2162 1080 Crs
2183 1378 Crs
2203 1157 Crs
2224 1617 Crs
2244 1807 Crs
2265 1505 Crs
2285 1190 Crs
2306 1230 Crs
2326 1278 Crs
2347 1739 Crs
2367 1319 Crs
2388 1794 Crs
2408 1307 Crs
2429 1253 Crs
2449 1250 Crs
2470 1330 Crs
2490 1167 Crs
2511 1500 Crs
2531 1764 Crs
2552 1324 Crs
2572 1367 Crs
2593 1612 Crs
2613 1662 Crs
2634 1511 Crs
2654 1515 Crs
2675 1265 Crs
2695 1387 Crs
2716 1434 Crs
2737 2303 Crs
2757 1673 Crs
2778 1638 Crs
2798 1782 Crs
2819 1308 Crs
2839 1621 Crs
2860 1175 Crs
2880 1265 Crs
2901 1753 Crs
2921 1394 Crs
2942 1910 Crs
2962 1412 Crs
2983 1660 Crs
3003 1388 Crs
3024 1505 Crs
3044 1636 Crs
3065 1312 Crs
3085 1837 Crs
3106 1111 Crs
3126 1360 Crs
3147 1378 Crs
3167 1366 Crs
3188 1796 Crs
3208 1086 Crs
3229 1249 Crs
3249 1247 Crs
3270 1848 Crs
3290 1788 Crs
3311 1154 Crs
3331 1365 Crs
3352 1288 Crs
3372 1893 Crs
3393 1795 Crs
3413 1343 Crs
3434 1053 Crs
3454 1450 Crs
3475 1568 Crs
3495 1242 Crs
3516 1429 Crs
3536 1244 Crs
3557 1309 Crs
3577 1094 Crs
3598 1426 Crs
3618 1797 Crs
3639 1298 Crs
3659 1136 Crs
3680 1381 Crs
3700 1374 Crs
3721 1221 Crs
3741 1463 Crs
3762 1651 Crs
3782 1111 Crs
3803 1270 Crs
3823 1242 Crs
3844 1301 Crs
3864 1040 Crs
3885 1296 Crs
3905 1969 Crs
3926 1198 Crs
3946 1637 Crs
3967 1270 Crs
3987 1578 Crs
4008 1461 Crs
4028 1646 Crs
4049 1501 Crs
4069 1450 Crs
4090 1323 Crs
4110 1135 Crs
4131 1358 Crs
4151 1280 Crs
4172 1604 Crs
4192 1229 Crs
4213 1537 Crs
4233 1748 Crs
4254 1589 Crs
4274 1997 Crs
4295 1624 Crs
4315 1248 Crs
4336 1290 Crs
4356 1315 Crs
4377 1396 Crs
4397 1264 Crs
4418 1320 Crs
4438 1596 Crs
4459 1854 Crs
4479 1333 Crs
4500 1151 Crs
4520 1844 Crs
4541 1882 Crs
4561 1269 Crs
4582 1723 Crs
4602 1134 Crs
4623 1190 Crs
4643 1196 Crs
4664 1441 Crs
4684 1577 Crs
4705 1457 Crs
4725 1531 Crs
4746 1648 Crs
4766 1416 Crs
4787 1650 Crs
4419 3114 Crs
% End plot #2
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
686 3387 N
686 588 L
4101 0 V
0 2799 V
-4101 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
